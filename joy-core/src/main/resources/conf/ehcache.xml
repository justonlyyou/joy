<ehcache>
    <!-- Sets the path to the directory where cache .data files are created.

         If the path is a Java System Property it is replaced by
         its value in the running VM.

         The following properties are translated:
         user.home - User's home directory
         user.dir - User's current working directory
         java.io.tmpdir - Default temp file path -->
    <diskStore path="java.io.tmpdir"/>


    <!--Default Cache configuration. These will applied to caches programmatically created through
        the CacheManager.

        The following attributes are required for defaultCache:

        maxInMemory       - Sets the maximum number of objects that will be created in memory
        eternal           - Sets whether elements are eternal. If eternal,  timeouts are ignored and the element
                            is never expired.
        timeToIdleSeconds - Sets the time to idle for an element before it expires. Is only used
                            if the element is not eternal. Idle time is now - last accessed time
        timeToLiveSeconds - Sets the time to live for an element before it expires. Is only used
                            if the element is not eternal. TTL is now - creation time
        overflowToDisk    - Sets whether elements can overflow to disk when the in-memory cache
                            has reached the maxInMemory limit.

        -->
        
        <!-- 
	        配置自定义缓存
	        必须要有的属性：
	        name : cache的名字，用来识别不同的cache，必须惟一
	        maxElementsInMemory：缓存中允许创建的最大对象数
	        maxElementsOnDisk: 硬盘管理的缓存元素数量最大限值。默认值为0，就是没有限制。
	        eternal：缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期。
	        overflowToDisk：内存不足时，是否启用磁盘缓存。
	        可选属性：
	        timeToIdleSeconds：缓存数据的钝化时间，也就是在一个元素消亡之前，
	                    两次访问时间的最大时间间隔值，这只能在元素不是永久驻留时有效，
	                    如果该值是 0 就意味着元素可以停顿无穷长的时间。
	        timeToLiveSeconds：缓存数据的生存时间，也就是一个元素从构建到消亡的最大时间间隔值，
	                    这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间。
	        memoryStoreEvictionPolicy：缓存满了之后的淘汰算法。共有三种，Recently Used (LRU)最近最少使用，为默认。 
	        			First In First Out (FIFO)，先进先出。Less Frequently Used(specified as LFU)最少使用。
	        diskPersistent: 设定在虚拟机重启时是否进行磁盘存储，默认为false.(一般对于安全小型应用，宜设为true)。
			diskExpiryThreadIntervalSeconds: 访问磁盘线程活动时间。
 			diskSpoolBufferSizeMB: 存入磁盘时的缓冲区大小，默认30MB,每个缓存都有自己的缓冲区。
    -->
        
    <defaultCache
        maxElementsInMemory="10000"
        eternal="false"
        timeToIdleSeconds="120"
        timeToLiveSeconds="120"
        overflowToDisk="true"
        />

    <!--Predefined caches.  Add your cache configuration settings here.
        If you do not have a configuration for your cache a WARNING will be issued when the
        CacheManager starts

        The following attributes are required for defaultCache:

        name              - Sets the name of the cache. This is used to identify the cache. It must be unique.
        maxInMemory       - Sets the maximum number of objects that will be created in memory
        eternal           - Sets whether elements are eternal. If eternal,  timeouts are ignored and the element
                            is never expired.
        timeToIdleSeconds - Sets the time to idle for an element before it expires. Is only used
                            if the element is not eternal. Idle time is now - last accessed time
        timeToLiveSeconds - Sets the time to live for an element before it expires. Is only used
                            if the element is not eternal. TTL is now - creation time
        overflowToDisk    - Sets whether elements can overflow to disk when the in-memory cache
                            has reached the maxInMemory limit.

        -->

    <!-- Sample cache named sampleCache1
        This cache contains a maximum in memory of 10000 elements, and will expire
        an element if it is idle for more than 5 minutes and lives for more than
        10 minutes.

        If there are more than 10000 elements it will overflow to the
        disk cache, which in this configuration will go to wherever java.io.tmp is
        defined on your system. On a standard Linux system this will be /tmp"
        -->
        
    <cache name="MD_RDB_TABLE"
        maxElementsInMemory="1000"
        eternal="true"
        overflowToDisk="true"
        />
        
       <cache name="MD_RDB_COLUMN"
        maxElementsInMemory="1000"
        eternal="true"
        overflowToDisk="true"
        />
        
       <cache name="MD_RDB_PRIMARY_KEY"
        maxElementsInMemory="1000"
        eternal="true"
        overflowToDisk="true"
        />
        
        <cache name="SYS_PARAM"
        maxElementsInMemory="1000"
        eternal="true"
        overflowToDisk="true"
        />
        
        <cache name="SYS_CODE"
        maxElementsInMemory="1000"
        eternal="true"
        overflowToDisk="true"
        />
     

</ehcache>

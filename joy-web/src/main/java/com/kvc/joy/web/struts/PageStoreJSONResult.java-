package com.kvc.joy.rp.struts;

import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts2.StrutsStatics;
import org.apache.struts2.json.JSONException;
import org.apache.struts2.json.JSONResult;
import org.apache.struts2.json.JSONUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.kvc.joy.core.rp.pagestore.PageStore;
import com.kvc.joy.core.rp.pagestore.PageStoreFactory;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionInvocation;

/**
 * 
 * @author 唐玮琳
 * @time 2012-6-15 下午10:26:16
 */
public class PageStoreJSONResult extends JSONResult {

	private Logger logger = LoggerFactory.getLogger(getClass());

	public void execute(ActionInvocation invocation) throws Exception {
		ActionContext actionContext = invocation.getInvocationContext();
		HttpServletRequest request = (HttpServletRequest) actionContext.get(StrutsStatics.HTTP_REQUEST);
		HttpServletResponse response = (HttpServletResponse) actionContext.get(StrutsStatics.HTTP_RESPONSE);

		Object action = invocation.getAction();
		if (action instanceof PageStoreAction) {
			PageStore pageStore = PageStoreFactory.curPageStore();
			try {
				writeToResponse(response, createJSONString(request, pageStore), enableGzip(request));
				PageStoreFactory.clearCurrentPageStore();
			} catch (IOException exception) {
				logger.error(exception.getMessage(), exception);
				throw exception;
			}
		} else {
			throw new RuntimeException("result type为ajaxJson的action类必须继承PageStoreAction！action: " + action.getClass()); // TODO
		}
	}

	protected String createJSONString(HttpServletRequest request, Object rootObject) throws JSONException {
		String json;
		json = JSONUtil.serialize(rootObject, getExcludePropertiesList(), getIncludePropertiesList(), isIgnoreHierarchy(), isEnumAsBean(), isExcludeNullProperties());
		json = addCallbackIfApplicable(request, json);
		return json;
	}

	private boolean enableGzip(HttpServletRequest request) {
		return isEnableGZIP() && JSONUtil.isGzipInRequest(request);
	}

}

package org.joy.swing.datechooser;

import java.util.Calendar;
import java.util.Date;

import org.joy.commons.lang.DateTool;
import org.joy.commons.lang.string.I18nTool;

/**
 * 日期区间的组件
 * @author allenwc
 */
public class FromToDateChooser extends javax.swing.JPanel {

    /**
     * 构造函数
     */
    public FromToDateChooser() {
        initComponents();
    }

    /**
     * 设置起始日期
     * @param date 日期
     */
    public void setFromDate(Date date) {
        fromDateChooser.setDate(date);
    }

    /**
     * 设置终止日期
     * @param date 日期
     */
    public void setToDate(Date date) {
        toDateChooser.setDate(date);
    }

    /**
     * 得到起始日期，没有则为空
     * @return 起始日期
     */
    public Date getFromDate() {
        Calendar fromDate = getFromCalendar(fromDateChooser.getCalendar());
        Calendar toDate = getFromCalendar(toDateChooser.getCalendar());
        if (fromDate != null) {
            if (fromDate.after(toDate)) {
                fromDate = toDate;
            }
        }

        return (fromDate == null || fromDate.getTimeInMillis() <= 0) ? null : fromDate.getTime();
    }

    /**
     * 得到结束日期，没有则为空
     * @return 结束日期
     */
    public Date getToDate() {
        Calendar fromDate = getToCalendar(fromDateChooser.getCalendar());
        Calendar toDate = getToCalendar(toDateChooser.getCalendar());
        if (toDate != null) {
            if (toDate.before(fromDate)) {
                toDate = fromDate;
            }
        }
        return (toDate == null || toDate.getTimeInMillis() <= 0) ? null : toDate.getTime();
    }

    public String getValue() {
        StringBuilder valueStr = new StringBuilder();
        Date fromDate = fromDateChooser.getDate();
        Date toDate = toDateChooser.getDate();
        DateTool.swapDates(fromDate, toDate);
        String fromDateStr = DateTool.formatDate(fromDate, DateTool.FMT_HYPHEN_DAY_CLN_SECOND);
        String toDateStr = DateTool.formatDate(toDate, DateTool.FMT_HYPHEN_DAY_CLN_SECOND);
        if (fromDateStr == null && toDateStr == null) {
            return null;
        }
        if (fromDateStr != null) {
            valueStr.append(fromDateStr);
        }
        valueStr.append("|");
        if (toDateStr != null) {
            valueStr.append(toDateStr);
        }
        return valueStr.toString();
    }

    /**
     * 重置(前一个日期选择器中显示上月,后一个选择器显示今日)
     */
    public void reset() {
        Calendar calendar = Calendar.getInstance();
        toDateChooser.setCalendar(calendar);
        calendar.add(Calendar.MONTH, -1);
        fromDateChooser.setCalendar(calendar);
    }

    private Calendar getFromCalendar(Calendar calendar) {
        if (calendar != null) {
            calendar.set(Calendar.HOUR_OF_DAY, 0);
            calendar.set(Calendar.MINUTE, 0);
            calendar.set(Calendar.SECOND, 0);
            calendar.set(Calendar.MILLISECOND, 0);
        }
        return calendar;
    }

    private Calendar getToCalendar(Calendar calendar) {
        if (calendar != null) {
            calendar.set(Calendar.HOUR_OF_DAY, calendar.getActualMaximum(Calendar.HOUR_OF_DAY));
            calendar.set(Calendar.MINUTE, calendar.getActualMaximum(Calendar.MINUTE));
            calendar.set(Calendar.SECOND, calendar.getActualMaximum(Calendar.SECOND));
            calendar.set(Calendar.MILLISECOND, calendar.getActualMaximum(Calendar.MILLISECOND));
        }
        return calendar;
    }

    /**
     * 清空日期，将日期选择器中的日期都设置为空
     */
    public void clearDate() {
        fromDateChooser.setDate(null);
        toDateChooser.setDate(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fromDateChooser = new XDateChooser();
        toChooserPanel = new javax.swing.JPanel();
        toDateChooser = new XDateChooser();
        toLabel = new javax.swing.JLabel();

        setOpaque(false);
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        fromDateChooser.setMinSelectableDate(new Date(0));
        add(fromDateChooser);

        toChooserPanel.setOpaque(false);
        toChooserPanel.setLayout(new java.awt.BorderLayout());

        toDateChooser.setMinSelectableDate(new Date(0));
        reset();
        toChooserPanel.add(toDateChooser, java.awt.BorderLayout.CENTER);

        toLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toLabel.setText(I18nTool.getLocalStr("To"));
        toChooserPanel.add(toLabel, java.awt.BorderLayout.WEST);

        add(toChooserPanel);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser fromDateChooser;
    private javax.swing.JPanel toChooserPanel;
    private com.toedter.calendar.JDateChooser toDateChooser;
    private javax.swing.JLabel toLabel;
    // End of variables declaration//GEN-END:variables

//    public static class DefaultClearFromToDateChooser extends FromToDateChooser implements DynamicUIInf {
//
//        @Override
//        public void reset() {
//            clearDate();
//        }
//
//        @Override
//        public void clear() {
//            clearDate();
//        }
//    }


}
